[{"/home/aditya/Documents/freeform-editor/src/index.js":"1","/home/aditya/Documents/freeform-editor/src/reportWebVitals.js":"2","/home/aditya/Documents/freeform-editor/src/App.js":"3","/home/aditya/Documents/freeform-editor/src/components/ElementsTab.jsx":"4","/home/aditya/Documents/freeform-editor/src/components/Editor.jsx":"5","/home/aditya/Documents/freeform-editor/src/components/Image.jsx":"6","/home/aditya/Documents/freeform-editor/src/components/Rectangle.jsx":"7","/home/aditya/Documents/freeform-editor/src/components/Button.jsx":"8","/home/aditya/Documents/freeform-editor/src/components/Text.jsx":"9","/home/aditya/Documents/freeform-editor/src/components/Dragabble.jsx":"10","/home/aditya/Documents/freeform-editor/src/components/GroupDraggable.jsx":"11"},{"size":500,"mtime":1612543648502,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1612543648502,"results":"14","hashOfConfig":"13"},{"size":5063,"mtime":1613565828379,"results":"15","hashOfConfig":"13"},{"size":723,"mtime":1612543648502,"results":"16","hashOfConfig":"13"},{"size":14552,"mtime":1613583836241,"results":"17","hashOfConfig":"13"},{"size":409,"mtime":1613393045361,"results":"18","hashOfConfig":"13"},{"size":326,"mtime":1612543648502,"results":"19","hashOfConfig":"13"},{"size":315,"mtime":1613051571219,"results":"20","hashOfConfig":"13"},{"size":315,"mtime":1613539674303,"results":"21","hashOfConfig":"13"},{"size":11328,"mtime":1613566295325,"results":"22","hashOfConfig":"13"},{"size":3634,"mtime":1613583157435,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5rif2g",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aditya/Documents/freeform-editor/src/index.js",[],["50","51"],"/home/aditya/Documents/freeform-editor/src/reportWebVitals.js",[],"/home/aditya/Documents/freeform-editor/src/App.js",["52","53","54","55","56"],"import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Editor from './components/Editor'\nimport ElementsTab from './components/ElementsTab'\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.addelement=this.addelement.bind(this)\n  }\n  state={\n    elements:{},\n    selection:{\n    },\n    groups:{},\n    maxindex:99999\n\n}\naddSelection=(groupx,groupy)=>{\n  this.setState({\n    selection:{groupx:groupx,groupy:groupy}\n  })\n\n}\n  addelement=(value)=>{\n    var count=0\n    for (var c in this.state.elements){\n            count+=1\n    }\n    var elementid=`element-${count}`\n    var newlist=this.state.elements\n    newlist[elementid]={\n        type:value,\n        id:`element-${elementid}`,\n        x:70,\n        y:220,\n        offsetHeight:0,\n        offsetWidth:0,\n        zindex:this.state.maxindex\n\n    }\n    this.setState({\n        elements:newlist\n    })\n    // console.log(this.state)\n    \n\n}\naddgroups=()=>{\n\n}\nsetOffset=(elementid,width,height,zindex)=>{\n  var stateelements=this.state.elements\n    stateelements[elementid].offsetWidth=width\n    stateelements[elementid].offsetHeight=height\n    stateelements[elementid].zindex=zindex\n    if(this.state.maxindex<zindex){\n      this.setState({\n        elements:stateelements,\n        maxindex:zindex+1\n      \n      })\n    }\n    else{\n      this.setState({\n        elements:stateelements,\n       \n      \n      })\n    }\n    \n  \n}\nsetGroupMovement=(elements)=>{\n  console.log(\"statwte\")\n  console.log(this.state.elements)\n  this.setState({\n    elements:elements\n  })\n  console.log(this.state.elements)\n  \n}\nsetInitialOffset=(elementid,width,height)=>{\n  var stateelements=this.state.elements\n  if(stateelements[elementid].offsetWidth!==width || stateelements[elementid].offsetHeight!==height){\n  stateelements[elementid].offsetWidth=width\n  stateelements[elementid].offsetHeight=height\n  this.setState({\n    elements:stateelements\n  })}\nconsole.log(this.state)\n}\ndoOverlap=(x1,y1,x2,y2,x3,y3,x4,y4)=>{\n  console.log(x1,y1,x2,y2,x3,y3,x4,y4)\n  if(x1>=x4 || x3>=x2){\n    return false\n  }\n  if(y1>=y4 || y3>=y2){\n    return false\n  }\n  return true\n}\nsetZindex=(direction,elementid)=>{\n  console.log(\"setz\")\n  var elements=this.state.elements\n  if(direction===\"forward\"){\n    var max=elements[elementid].zindex\n    for (var element in elements){\n      if(this.doOverlap(elements[elementid].x,elements[elementid].y,elements[elementid].x+elements[elementid].offsetWidth,\n        elements[elementid].y+elements[elementid].offsetHeight,elements[element].x,elements[element].y,elements[element].x+elements[element].offsetWidth,\n        elements[element].y+elements[element].offsetHeight) && elements[element].zindex>max){\n          max=elements[element].zindex\n          \n        }\n    }\n    elements[elementid].zindex=max\n    this.setState({\n      elements:elements\n    })\n    console.log(this.state)\n  }\n  else{\n    var min=elements[elementid].zindex\n    for (var element in elements){\n      console.log(this.doOverlap(elements[elementid].x,elements[elementid].y,elements[elementid].x+elements[elementid].offsetWidth,\n        elements[elementid].y+elements[elementid].offsetHeight,elements[element].x,elements[element].y,elements[element].x+elements[element].offsetWidth,\n        elements[element].y+elements[element].offsetHeight))\n      if(this.doOverlap(elements[elementid].x,elements[elementid].y,elements[elementid].x+elements[elementid].offsetWidth,\n        elements[elementid].y+elements[elementid].offsetHeight,elements[element].x,elements[element].y,elements[element].x+elements[element].offsetWidth,\n        elements[element].y+elements[element].offsetHeight) && elements[element].zindex<min){\n          min=elements[element].zindex\n          \n        }\n    }\n    if(min>=1){\n    elements[elementid].zindex=min-1}\n    else{\n      elements[elementid].zindex=0\n    }\n    console.log(min)\n    this.setState({\n      elements:elements\n    })\n    console.log(this.state)\n  }\n\n}\n  addcoords=(elementid,x,y)=>{\n    var stateelements=this.state.elements\n    stateelements[elementid]['x']=x\n    stateelements[elementid]['y']=y\n    this.setState({\n      elements:stateelements\n    })\n    // console.log(\"app state\")\n    // console.log(this.state)\n  \n  }\n  setElementCoords=()=>{\n    var ele=\"element-0\"\n    var elements=this.state.elements\n    if(ele in elements){\n      this.state.elements[ele].x=0\n      this.state.elements[ele].y=0\n      this.setState({\n        elements:elements\n      })\n    }\n  }\n  render(){\n    return (\n      <div class=\"flexbox\">\n        <div classname=\"flexitem\">\n      <ElementsTab addelement={this.addelement} />\n      </div>\n      <div className=\"flexitem\">\n        <Editor elements={this.state.elements} selection={this.state.selection} addcoords={this.addcoords} setOffset={this.setOffset} maxindex={this.state.maxindex} setInitialOffset={this.setInitialOffset} setZindex={this.setZindex} setGroupMovement={this.setGroupMovement} addSelection={this.addSelection}/>\n      </div>\n      \n      </div>\n\n    )\n  }\n}\nexport default App;\n","/home/aditya/Documents/freeform-editor/src/components/ElementsTab.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Editor.jsx",["57","58","59","60","61"],"/home/aditya/Documents/freeform-editor/src/components/Image.jsx",["62"],"import {Component} from 'react'\nimport Draggable from 'react-draggable';\nimport Dragabble from './Dragabble'\nclass Image extends Component{\n    render(){\n        return (\n            \n             <div className=\"image\">\n            <div className={this.props.id} id={this.props.id} > \n            {this.props.id}\n          </div>\n           </div>\n        )\n\n        \n    }\n}\n\nexport default Dragabble(Image)","/home/aditya/Documents/freeform-editor/src/components/Rectangle.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Button.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Text.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Dragabble.jsx",["63","64","65","66","67","68","69","70"],"import { Component } from \"react\";\nimport DraggableCore from 'react-draggable';\nimport Draggable from 'react-draggable';\nimport React from 'react'\nvar Dragabble=ComposedComponent => class  extends Component{\n\n  \n  constructor(props){\n    super(props)\n    this.myInput = React.createRef()\n\n\n  }\n  state = {\n    x:this.props.elements[this.props.id].x ,\n            y:this.props.elements[this.props.id].y ,\n    \n   id:this.props.id,\n   offsetHeight:0,\n   offsetWidth:0,\n   axis:\"both\",\n   zindex:this.props.elements[this.props.id].zindex+1,\n   max:this.props.maxindex,\n   bordercolor:\"transparent\"\n   \n   };\n\n    \n      componentDidMount() {\n        this.props.setInitialOffset(this.props.id,this.myInput.current.offsetWidth,this.myInput.current.offsetHeight)\n        \n      }\n      componentDidUpdate(){\n        console.log(\"inside drag update\")\n        \n        \n        console.log(this.props)\n        if(this.state.zindex!=this.props.elements[this.props.id].zindex){\n        this.setState({\n          zindex:this.props.elements[this.props.id].zindex\n        })}\n        console.log(\"propsporps \"+this.state.x,this.props.elements[this.props.id].x,this.state.y,this.props.elements[this.props.id].y)\n        if(this.props.group.includes(this.props.id) && this.props.group.length>1){\n        if(this.props.elements[this.props.id].x!==this.state.x || this.props.elements[this.props.id].y!==this.state.y){\n         \n          this.setState({\n            x:this.props.elements[this.props.id].x ,\n            y:this.props.elements[this.props.id].y ,\n            axis:\"none\"\n          })\n        }}\n        // else{\n        //   this.props.setInitialOffset(this.props.id,this.myInput.current.offsetWidth,this.myInput.current.offsetHeight)\n        // }\n      }\n    \n      disableDragabble=()=>{\n       // console.log(\"mouseup\")\n        this.setState({\n          Dragabble:false\n        })\n      }\n\n    eventLogger = (e, data) => {\n      // console.log('Event: ', e);\n      // console.log('Data: ', data);\n      this.setState({scale:1})\n      // this.props.addcoords(this.state.id,this.state.x,this.state.y,this.state.offsetHeight,this.state.offsetWidth)\n      this.props.hidehorizontal()\n      this.props.hidevertical()\n     this.props.hidelines()\n      if(parseInt(data.node.offsetWidth/2)+data.x>173 && parseInt(data.node.offsetWidth/2)+data.x<177){\n        this.props.showvertical()}\n        if(parseInt(data.node.offsetHeight/2)+data.y>248 && parseInt(data.node.offsetHeight/2)+data.y<256){\n          this.props.showhorizontal()}\n          // console.log(\"propsss\")\n          // console.log(this.props.elements)\n        var xdata=data.x;\n          var leftv=false\n          var rightv=false\n          var centerv=false\n          var leftx=0\n          var rightx=0\n          var centerx=0\n        var ydata=data.y\n      //  console.log(this.props.elements)\n      for (var element in this.props.elements){\n      //  console.log(\"events\")\n       // console.log(this.props.elements[element],data.x)\n         if(element!=this.state.id){\n        //  console.log(this.props.elements[element])\n        if(this.props.elements[element].x>data.x-5 && this.props.elements[element].x<data.x+5)//left left\n        {\n         xdata=this.props.elements[element].x\n         ydata=data.y\n        leftv=true\n        leftx=this.props.elements[element].x\n\n        }\n        if(this.props.elements[element].x+this.props.elements[element].offsetWidth>data.x-5 && this.props.elements[element].x+this.props.elements[element].offsetWidth<data.x+5)//left right\n        {\n         xdata=this.props.elements[element].x+this.props.elements[element].offsetWidth\n         ydata=data.y\n         leftv=true\n         leftx=this.props.elements[element].x+this.props.elements[element].offsetWidth\n\n        }\n        if(this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)>data.x-5 && this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)<data.x+5)//left center\n        {\n          xdata=this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)\n          ydata=data.y\n          leftv=true\n          leftx=this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)\n\n        }\n        // console.log(\"rightvertical\")\n        // console.log(this.props.elements[element].x+this.props.elements[element].offsetWidth,data.x+data.node.offsetWidth)\n        if(this.props.elements[element].x+this.props.elements[element].offsetWidth>data.x+data.node.offsetWidth-5 && this.props.elements[element].x+this.props.elements[element].offsetWidth<data.x+data.node.offsetWidth+5   )//right right\n        {\n          xdata=this.props.elements[element].x+this.props.elements[element].offsetWidth-data.node.offsetWidth\n          ydata=data.y\n          rightv=true\n          rightx=this.props.elements[element].x+this.props.elements[element].offsetWidth\n          // this.props.showrightvertical(data.x+data.node.offsetWidth)\n          // this.setState({\n          //   x:data.x+data.node.offsetWidth\n          // })\n          // console.log(\"leftleft\")\n          // console.log(this.state)\n\n        }\n        if(this.props.elements[element].x>data.x+data.node.offsetWidth-5 && this.props.elements[element].x<data.x+data.node.offsetWidth+5 )//right left\n        {\n          xdata= this.props.elements[element].x-data.node.offsetWidth\n          ydata=data.y\n          rightv=true\n          rightx=this.props.elements[element].x\n          // this.props.showrightvertical(data.x+data.node.offsetWidth)\n          // this.setState({\n          //   x:data.x+data.node.offsetWidth\n          // })\n\n        }\n        \n        if(this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)>data.x+data.node.offsetWidth-5 && this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)<data.x+data.node.offsetWidth+5 )//right center\n        {\n          xdata= this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)-data.node.offsetWidth\n          ydata=data.y\n          rightv=true\n\n          rightx=this.props.elements[element].x+(this.props.elements[element].offsetWidth/2)\n          // this.props.showcenterline(data.x+data.node.offsetWidth)\n          // this.setState({\n          //   x:parseInt(data.x+data.node.offsetWidth)\n          // })\n\n        }\n        \n        if(this.props.elements[element].x+((this.props.elements[element].offsetWidth)/2)>(data.x+(data.node.offsetWidth)/2)-5 &&this.props.elements[element].x+((this.props.elements[element].offsetWidth)/2)<(data.x+(data.node.offsetWidth)/2)+5)//center\n        {\n          xdata= this.props.elements[element].x+(this.props.elements[element].offsetWidth)/2-(data.node.offsetWidth/2)\n          ydata=data.y\n          centerv=true\n          centerx=this.props.elements[element].x+((this.props.elements[element].offsetWidth)/2)\n          // console.log('centers')\n          // console.log(this.props.elements[element].x+this.props.elements[element].offsetWidth,data.x+data.node.offsetWidth)\n          // this.props.showcenterline(data.x+(data.node.offsetWidth/2))\n          // this.setState({\n          //   x:parseInt(data.x+(data.node.offsetWidth/2))\n          // })\n          \n\n        }\n        if(data.x>=173 && data.x<179)//left center\n        {\n          xdata=175\n          ydata=data.y\n          // this.props.showcenterline(175)\n          // this.setState({\n          //   x:175\n          // })\n          centerv=true\n          centerx=175\n\n        }\n        \n        if(data.x+data.node.offsetWidth>=173 && data.x+data.node.offsetWidth<=179)//right center\n        {\n          xdata=175-data.node.offsetWidth\n          ydata=data.y\n          // this.props.showcenterline(175)\n          // this.setState({\n          //   x:175\n          // })\n          centerv=true\n          centerx=175\n        }\n        if(data.x+(data.node.offsetWidth/2)>this.props.elements[element].x-5 && data.x+(data.node.offsetWidth/2)<this.props.elements[element].x+5){\n          xdata=this.props.elements[element].x-(data.node.offsetWidth/2)\n          ydata=data.y\n          // this.props.showcenterline(175)\n          // this.setState({\n          //   x:175\n          // })\n          centerv=true\n          centerx=this.props.elements[element].x\n        }\n        if(data.x+(data.node.offsetWidth/2)>this.props.elements[element].x+this.props.elements[element].offsetWidth-5 && data.x+(data.node.offsetWidth/2)<this.props.elements[element].x+this.props.elements[element].offsetWidth+5){\n          xdata=this.props.elements[element].x+this.props.elements[element].offsetWidth-(data.node.offsetWidth/2)\n          ydata=data.y\n          // this.props.showcenterline(175)\n          // this.setState({\n          //   x:175\n          // })\n          centerv=true\n          centerx=this.props.elements[element].x+this.props.elements[element].offsetWidth\n        }\n      }\n        \n      \n      }\n      var axis=\"both\"\n      if(leftv===true || centerv===true || rightv===true){\n        axis=\"none\"\n      }\n      this.setState({\n          x:xdata,\n          y:ydata,\n          axis:axis\n          \n        }) \n        \n      this.props.showlines(leftv,centerv,rightv,leftx,centerx,rightx)\n      \n      \n\n    };\n    stopdrag=()=>{\n      this.props.hidehorizontal()\n      this.props.hidevertical()\n      // this.props.hiderightverticalline()\n      // this.props.hideleftvertical()\n      // this.props.hidecenterline()\n      // console.log(this.props)\n      this.props.hidelines()\n      this.props.addcoords(this.state.id,this.state.x,this.state.y,this.state.offsetHeight,this.state.offsetWidth)\n    }\n    \n    setOffset=(e,data)=>{\n     \n      this.setState({\n        axis:\"both\",\n        zindex:this.props.maxindex+1,\n        \n      })\n      console.log(\"zind \"+this.state.zindex,this.props.maxindex)\n      this.props.setOffset(this.state.id,data.node.offsetWidth,data.node.offsetHeight,this.props.maxindex+1)\n      \n\n    }\n    selectElement=(e)=>{\n     if(e.shiftKey){\n      if(this.state.bordercolor===\"transparent\"){\n      this.setState({\n        bordercolor:\"blue\",\n\n      })}\n      else{\n        this.setState({\n          bordercolor:\"transparent\",\n  \n        })\n      }\n      this.props.addSelected(this.state.id)\n      this.props.selectElement(this.state.id)\n    }\n  }\n    render()\n    {\n      \n        const { children } = this.props;\n    const { translateX, translateY, isDragging } = this.state;\n      var x=this.state.x+\"px\"\n      var y=this.state.y+\"px\"\n      var coords={\n        top:x,\n        left:y\n      }\n      // console.log(coords)\n        return (\n\n          <Draggable\n          axis={this.state.axis}\n          position={{x:this.state.x,y:this.state.y}}\n          onStart={this.setOffset}\n          onDrag={this.eventLogger}\n          onStop={this.stopdrag}\n          bounds={{left:0,right:230,top:0,bottom:480}}\n          scale={this.state.scale}\n          \n         \n         >\n            <div className=\"setpos\"  ref={this.myInput} onClick={this.selectElement} style={{zIndex:this.state.zindex,outline:\"1px solid\",outlineColor:this.state.bordercolor}}>\n            \n              \n              \n             <ComposedComponent   {...this.state} {...this.props}\n             \n              />\n             </div>\n              </Draggable>\n            \n        )\n    }\n} \n\nexport default Dragabble\n\n\n\n\n\n\n\n\n\n","/home/aditya/Documents/freeform-editor/src/components/GroupDraggable.jsx",["71","72","73","74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":27,"column":14,"nodeType":"82","messageId":"83","endLine":27,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":124,"column":14,"nodeType":"82","messageId":"87","endLine":124,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":163,"column":7,"nodeType":"90","endLine":163,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":164,"column":7,"nodeType":"90","endLine":164,"endColumn":31},{"ruleId":"80","severity":1,"message":"91","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"80","severity":1,"message":"92","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":17},{"ruleId":"85","severity":1,"message":"93","line":195,"column":21,"nodeType":"82","messageId":"87","endLine":195,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":263,"column":18,"nodeType":"82","messageId":"87","endLine":263,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":265,"column":85,"nodeType":"96","messageId":"97","endLine":265,"endColumn":87},{"ruleId":"80","severity":1,"message":"92","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":17},{"ruleId":"80","severity":1,"message":"98","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"94","severity":1,"message":"99","line":38,"column":29,"nodeType":"96","messageId":"97","endLine":38,"endColumn":31},{"ruleId":"94","severity":1,"message":"99","line":90,"column":20,"nodeType":"96","messageId":"97","endLine":90,"endColumn":22},{"ruleId":"80","severity":1,"message":"100","line":281,"column":17,"nodeType":"82","messageId":"83","endLine":281,"endColumn":25},{"ruleId":"80","severity":1,"message":"101","line":282,"column":13,"nodeType":"82","messageId":"83","endLine":282,"endColumn":23},{"ruleId":"80","severity":1,"message":"102","line":282,"column":25,"nodeType":"82","messageId":"83","endLine":282,"endColumn":35},{"ruleId":"80","severity":1,"message":"103","line":282,"column":37,"nodeType":"82","messageId":"83","endLine":282,"endColumn":47},{"ruleId":"80","severity":1,"message":"104","line":285,"column":11,"nodeType":"82","messageId":"83","endLine":285,"endColumn":17},{"ruleId":"80","severity":1,"message":"105","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":17},{"ruleId":"80","severity":1,"message":"106","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"80","severity":1,"message":"107","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":12},{"ruleId":"80","severity":1,"message":"108","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":53,"column":22,"nodeType":"82","messageId":"87","endLine":53,"endColumn":29},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'c' is assigned a value but never used.","no-redeclare","'element' is already defined.","redeclared","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'ReactDOM' is defined but never used.","'Draggable' is defined but never used.","'elementid' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DraggableCore' is defined but never used.","Expected '!==' and instead saw '!='.","'children' is assigned a value but never used.","'translateX' is assigned a value but never used.","'translateY' is assigned a value but never used.","'isDragging' is assigned a value but never used.","'coords' is assigned a value but never used.","'Rectangle' is defined but never used.","'Image' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]