[{"/home/aditya/Documents/freeform-editor/src/index.js":"1","/home/aditya/Documents/freeform-editor/src/reportWebVitals.js":"2","/home/aditya/Documents/freeform-editor/src/App.js":"3","/home/aditya/Documents/freeform-editor/src/components/ElementsTab.jsx":"4","/home/aditya/Documents/freeform-editor/src/components/Editor.jsx":"5","/home/aditya/Documents/freeform-editor/src/components/Image.jsx":"6","/home/aditya/Documents/freeform-editor/src/components/Rectangle.jsx":"7","/home/aditya/Documents/freeform-editor/src/components/Button.jsx":"8","/home/aditya/Documents/freeform-editor/src/components/Text.jsx":"9","/home/aditya/Documents/freeform-editor/src/components/Dragabble.jsx":"10","/home/aditya/Documents/freeform-editor/src/components/GroupDraggable.jsx":"11"},{"size":500,"mtime":1612543648502,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1612543648502,"results":"14","hashOfConfig":"13"},{"size":4479,"mtime":1613481261567,"results":"15","hashOfConfig":"13"},{"size":723,"mtime":1612543648502,"results":"16","hashOfConfig":"13"},{"size":13313,"mtime":1613488268435,"results":"17","hashOfConfig":"13"},{"size":409,"mtime":1613393045361,"results":"18","hashOfConfig":"13"},{"size":326,"mtime":1612543648502,"results":"19","hashOfConfig":"13"},{"size":315,"mtime":1613051571219,"results":"20","hashOfConfig":"13"},{"size":315,"mtime":1613393045361,"results":"21","hashOfConfig":"13"},{"size":11044,"mtime":1613491168348,"results":"22","hashOfConfig":"13"},{"size":2309,"mtime":1613491549071,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5rif2g",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aditya/Documents/freeform-editor/src/index.js",[],["49","50"],"/home/aditya/Documents/freeform-editor/src/reportWebVitals.js",[],"/home/aditya/Documents/freeform-editor/src/App.js",["51","52","53"],"import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Editor from './components/Editor'\nimport ElementsTab from './components/ElementsTab'\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.addelement=this.addelement.bind(this)\n  }\n  state={\n    elements:{},\n    maxindex:99999\n\n}\n  addelement=(value)=>{\n    var count=0\n    for (var c in this.state.elements){\n            count+=1\n    }\n    var elementid=`element-${count}`\n    var newlist=this.state.elements\n    newlist[elementid]={\n        type:value,\n        id:`element-${elementid}`,\n        x:70,\n        y:220,\n        offsetHeight:0,\n        offsetWidth:0,\n        zindex:this.state.maxindex\n\n    }\n    this.setState({\n        elements:newlist\n    })\n    // console.log(this.state)\n\n}\nsetOffset=(elementid,width,height,zindex)=>{\n  var stateelements=this.state.elements\n    stateelements[elementid].offsetWidth=width\n    stateelements[elementid].offsetHeight=height\n    stateelements[elementid].zindex=zindex\n    if(this.state.maxindex<zindex){\n      this.setState({\n        elements:stateelements,\n        maxindex:zindex+1\n      \n      })\n    }\n    else{\n      this.setState({\n        elements:stateelements,\n       \n      \n      })\n    }\n    \n  \n}\nsetGroupMovement=(elements)=>{\n  console.log(\"statwte\")\n  console.log(this.state.elements)\n  this.setState({\n    elements:elements\n  })\n  console.log(this.state.elements)\n  \n}\nsetInitialOffset=(elementid,width,height)=>{\n  var stateelements=this.state.elements\n  stateelements[elementid].offsetWidth=width\n  stateelements[elementid].offsetHeight=height\n  this.setState({\n    elements:stateelements\n  })\nconsole.log(this.state)\n}\ndoOverlap=(x1,y1,x2,y2,x3,y3,x4,y4)=>{\n  console.log(x1,y1,x2,y2,x3,y3,x4,y4)\n  if(x1>=x4 || x3>=x2){\n    return false\n  }\n  if(y1>=y4 || y3>=y2){\n    return false\n  }\n  return true\n}\nsetZindex=(direction,elementid)=>{\n  console.log(\"setz\")\n  var elements=this.state.elements\n  if(direction===\"forward\"){\n    var max=elements[elementid].zindex\n    for (var element in elements){\n      if(this.doOverlap(elements[elementid].x,elements[elementid].y,elements[elementid].x+elements[elementid].offsetWidth,\n        elements[elementid].y+elements[elementid].offsetHeight,elements[element].x,elements[element].y,elements[element].x+elements[element].offsetWidth,\n        elements[element].y+elements[element].offsetHeight) && elements[element].zindex>max){\n          max=elements[element].zindex\n          \n        }\n    }\n    elements[elementid].zindex=max\n    this.setState({\n      elements:elements\n    })\n    console.log(this.state)\n  }\n  else{\n    var min=elements[elementid].zindex\n    for (var element in elements){\n      console.log(this.doOverlap(elements[elementid].x,elements[elementid].y,elements[elementid].x+elements[elementid].offsetWidth,\n        elements[elementid].y+elements[elementid].offsetHeight,elements[element].x,elements[element].y,elements[element].x+elements[element].offsetWidth,\n        elements[element].y+elements[element].offsetHeight))\n      if(this.doOverlap(elements[elementid].x,elements[elementid].y,elements[elementid].x+elements[elementid].offsetWidth,\n        elements[elementid].y+elements[elementid].offsetHeight,elements[element].x,elements[element].y,elements[element].x+elements[element].offsetWidth,\n        elements[element].y+elements[element].offsetHeight) && elements[element].zindex<min){\n          min=elements[element].zindex\n          \n        }\n    }\n    if(min>=1){\n    elements[elementid].zindex=min-1}\n    else{\n      elements[elementid].zindex=0\n    }\n    console.log(min)\n    this.setState({\n      elements:elements\n    })\n    console.log(this.state)\n  }\n\n}\n  addcoords=(elementid,x,y)=>{\n    var stateelements=this.state.elements\n    stateelements[elementid]['x']=x\n    stateelements[elementid]['y']=y\n    this.setState({\n      elements:stateelements\n    })\n    // console.log(\"app state\")\n    // console.log(this.state)\n  }\n  render(){\n    return (\n      <div class=\"flexbox\">\n        <div classname=\"flexitem\">\n      <ElementsTab addelement={this.addelement} />\n      </div>\n      <div className=\"flexitem\">\n        <Editor elements={this.state.elements} addcoords={this.addcoords} setOffset={this.setOffset} maxindex={this.state.maxindex} setInitialOffset={this.setInitialOffset} setZindex={this.setZindex} setGroupMovement={this.setGroupMovement}/>\n      </div>\n      \n      </div>\n\n    )\n  }\n}\nexport default App;\n","/home/aditya/Documents/freeform-editor/src/components/ElementsTab.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Editor.jsx",["54","55","56","57"],"/home/aditya/Documents/freeform-editor/src/components/Image.jsx",["58"],"import {Component} from 'react'\nimport Draggable from 'react-draggable';\nimport Dragabble from './Dragabble'\nclass Image extends Component{\n    render(){\n        return (\n            \n             <div className=\"image\">\n            <div className={this.props.id} id={this.props.id} > \n            {this.props.id}\n          </div>\n           </div>\n        )\n\n        \n    }\n}\n\nexport default Dragabble(Image)","/home/aditya/Documents/freeform-editor/src/components/Rectangle.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Button.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Text.jsx",[],"/home/aditya/Documents/freeform-editor/src/components/Dragabble.jsx",["59","60","61","62","63","64","65","66"],"/home/aditya/Documents/freeform-editor/src/components/GroupDraggable.jsx",["67","68","69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":18,"column":14,"nodeType":"77","messageId":"78","endLine":18,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":110,"column":14,"nodeType":"77","messageId":"82","endLine":110,"endColumn":21},{"ruleId":"75","severity":1,"message":"83","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":241,"column":18,"nodeType":"77","messageId":"82","endLine":241,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":243,"column":85,"nodeType":"87","messageId":"88","endLine":243,"endColumn":87},{"ruleId":"75","severity":1,"message":"84","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"89","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"85","severity":1,"message":"90","line":33,"column":29,"nodeType":"87","messageId":"88","endLine":33,"endColumn":31},{"ruleId":"85","severity":1,"message":"90","line":81,"column":20,"nodeType":"87","messageId":"88","endLine":81,"endColumn":22},{"ruleId":"75","severity":1,"message":"91","line":272,"column":17,"nodeType":"77","messageId":"78","endLine":272,"endColumn":25},{"ruleId":"75","severity":1,"message":"92","line":273,"column":13,"nodeType":"77","messageId":"78","endLine":273,"endColumn":23},{"ruleId":"75","severity":1,"message":"93","line":273,"column":25,"nodeType":"77","messageId":"78","endLine":273,"endColumn":35},{"ruleId":"75","severity":1,"message":"94","line":273,"column":37,"nodeType":"77","messageId":"78","endLine":273,"endColumn":47},{"ruleId":"75","severity":1,"message":"95","line":276,"column":11,"nodeType":"77","messageId":"78","endLine":276,"endColumn":17},{"ruleId":"75","severity":1,"message":"96","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":17},{"ruleId":"75","severity":1,"message":"97","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":13},{"ruleId":"75","severity":1,"message":"98","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":12},{"ruleId":"75","severity":1,"message":"99","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":14},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'c' is assigned a value but never used.","no-redeclare","'element' is already defined.","redeclared","'ReactDOM' is defined but never used.","'Draggable' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DraggableCore' is defined but never used.","Expected '!==' and instead saw '!='.","'children' is assigned a value but never used.","'translateX' is assigned a value but never used.","'translateY' is assigned a value but never used.","'isDragging' is assigned a value but never used.","'coords' is assigned a value but never used.","'Rectangle' is defined but never used.","'Image' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]